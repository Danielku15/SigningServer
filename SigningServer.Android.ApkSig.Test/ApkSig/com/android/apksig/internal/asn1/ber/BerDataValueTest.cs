// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>

using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber
{
    [TestClass]
    public class BerDataValueTest: SigningServer.Android.TestBase
    {
        internal static readonly Com.Android.Apksig.Internal.Asn1.Ber.BerDataValue TEST_VALUE1 = new Com.Android.Apksig.Internal.Asn1.Ber.BerDataValue(SigningServer.Android.IO.ByteBuffer.Wrap(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("aa")), SigningServer.Android.IO.ByteBuffer.Wrap(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("bb")), Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_UNIVERSAL, true, Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_SEQUENCE);
        
        internal static readonly Com.Android.Apksig.Internal.Asn1.Ber.BerDataValue TEST_VALUE2 = new Com.Android.Apksig.Internal.Asn1.Ber.BerDataValue(SigningServer.Android.IO.ByteBuffer.Wrap(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("cc")), SigningServer.Android.IO.ByteBuffer.Wrap(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("dd")), Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_CONTEXT_SPECIFIC, false, Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_OCTET_STRING);
        
        [Test]
        public virtual void TestGetTagClass()
        {
            AssertEquals(Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_UNIVERSAL, SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE1.GetTagClass());
            AssertEquals(Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_CONTEXT_SPECIFIC, SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE2.GetTagClass());
        }
        
        [Test]
        public virtual void TestIsConstructed()
        {
            AssertTrue(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE1.IsConstructed());
            AssertFalse(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE2.IsConstructed());
        }
        
        [Test]
        public virtual void TestGetTagNumber()
        {
            AssertEquals(Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_SEQUENCE, SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE1.GetTagNumber());
            AssertEquals(Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_OCTET_STRING, SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE2.GetTagNumber());
        }
        
        [Test]
        public virtual void TestGetEncoded()
        {
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("aa"), SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE1.GetEncoded());
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("cc"), SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE2.GetEncoded());
        }
        
        [Test]
        public virtual void TestGetEncodedReturnsSlice()
        {
            SigningServer.Android.IO.ByteBuffer encoded = SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE1.GetEncoded();
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("aa"), encoded);
            encoded.Position(encoded.Limit());
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("aa"), SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE1.GetEncoded());
        }
        
        [Test]
        public virtual void TestGetEncodedContents()
        {
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("bb"), SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE1.GetEncodedContents());
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("dd"), SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE2.GetEncodedContents());
        }
        
        [Test]
        public virtual void TestGetEncodedContentsReturnsSlice()
        {
            SigningServer.Android.IO.ByteBuffer encoded = SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE1.GetEncodedContents();
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("bb"), encoded);
            encoded.Position(encoded.Limit());
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("bb"), SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE1.GetEncodedContents());
        }
        
        [Test]
        public virtual void TestDataValueReader()
        {
            Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueReader reader = SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE1.DataValueReader();
            AssertSame(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueTest.TEST_VALUE1, reader.ReadDataValue());
            AssertNull(reader.ReadDataValue());
            AssertNull(reader.ReadDataValue());
        }
        
        [Test]
        public virtual void TestContentsReader()
        {
            Com.Android.Apksig.Internal.Asn1.Ber.BerDataValue dataValue = new Com.Android.Apksig.Internal.Asn1.Ber.BerDataValue(SigningServer.Android.IO.ByteBuffer.Allocate(0), SigningServer.Android.IO.ByteBuffer.Wrap(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("300203040500")), Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_UNIVERSAL, true, Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_SEQUENCE);
            Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueReader reader = dataValue.ContentsReader();
            AssertEquals(typeof(Com.Android.Apksig.Internal.Asn1.Ber.ByteBufferBerDataValueReader), reader.GetType());
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("30020304"), reader.ReadDataValue().GetEncoded());
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("0500"), reader.ReadDataValue().GetEncoded());
            AssertNull(reader.ReadDataValue());
        }
        
    }
    
}
