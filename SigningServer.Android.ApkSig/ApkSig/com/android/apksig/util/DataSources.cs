// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>

/*
 * Copyright (C) 2022 Daniel Kuschny (C# port)
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;

namespace SigningServer.Android.Com.Android.Apksig.Util
{
    /// <summary>
    /// Utility methods for working with {@link DataSource} abstraction.
    /// </summary>
    public abstract class DataSources
    {
        internal DataSources()
        {
        }
        
        /// <summary>
        /// Returns a {@link DataSource} backed by the provided {@link ByteBuffer}. The data source
        /// represents the data contained between the position and limit of the buffer. Changes to the
        /// buffer's contents will be visible in the data source.
        /// </summary>
        public static SigningServer.Android.Com.Android.Apksig.Util.DataSource AsDataSource(SigningServer.Android.IO.ByteBuffer buffer)
        {
            if (buffer == null)
            {
                throw new System.NullReferenceException();
            }
            return new SigningServer.Android.Com.Android.Apksig.Internal.Util.ByteBufferDataSource(buffer);
        }
        
        /// <summary>
        /// Returns a {@link DataSource} backed by the provided {@link RandomAccessFile}. Changes to the
        /// file, including changes to size of file, will be visible in the data source.
        /// </summary>
        public static SigningServer.Android.Com.Android.Apksig.Util.DataSource AsDataSource(SigningServer.Android.IO.RandomAccessFile file)
        {
            return SigningServer.Android.Com.Android.Apksig.Util.DataSources.AsDataSource(file.GetChannel());
        }
        
        /// <summary>
        /// Returns a {@link DataSource} backed by the provided region of the {@link RandomAccessFile}.
        /// Changes to the file will be visible in the data source.
        /// </summary>
        public static SigningServer.Android.Com.Android.Apksig.Util.DataSource AsDataSource(SigningServer.Android.IO.RandomAccessFile file, long offset, long size)
        {
            return SigningServer.Android.Com.Android.Apksig.Util.DataSources.AsDataSource(file.GetChannel(), offset, size);
        }
        
        /// <summary>
        /// Returns a {@link DataSource} backed by the provided {@link FileChannel}. Changes to the
        /// file, including changes to size of file, will be visible in the data source.
        /// </summary>
        public static SigningServer.Android.Com.Android.Apksig.Util.DataSource AsDataSource(SigningServer.Android.IO.Channels.FileChannel channel)
        {
            if (channel == null)
            {
                throw new System.NullReferenceException();
            }
            return new SigningServer.Android.Com.Android.Apksig.Internal.Util.FileChannelDataSource(channel);
        }
        
        /// <summary>
        /// Returns a {@link DataSource} backed by the provided region of the {@link FileChannel}.
        /// Changes to the file will be visible in the data source.
        /// </summary>
        public static SigningServer.Android.Com.Android.Apksig.Util.DataSource AsDataSource(SigningServer.Android.IO.Channels.FileChannel channel, long offset, long size)
        {
            if (channel == null)
            {
                throw new System.NullReferenceException();
            }
            return new SigningServer.Android.Com.Android.Apksig.Internal.Util.FileChannelDataSource(channel, offset, size);
        }
        
    }
    
}
