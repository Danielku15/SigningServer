// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>

using System;

namespace SigningServer.Android.Com.Android.Apksig.Internal.Asn1
{
    public class Asn1DerEncoderTest: SigningServer.Android.TestBase
    {
        [Test]
        public virtual void TestInteger()
        {
            AssertEquals("3003020100", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(0)));
            AssertEquals("300302010c", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(12)));
            AssertEquals("300302017f", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(0x7f)));
            AssertEquals("3004020200ff", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(0xff)));
            AssertEquals("30030201ff", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(-1)));
            AssertEquals("3003020180", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(-128)));
            AssertEquals("3005020300ffee", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(0xffee)));
            AssertEquals("300602047fffffff", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(SigningServer.Android.Core.IntExtensions.MaxValue)));
            AssertEquals("3006020480000000", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(SigningServer.Android.Core.IntExtensions.MIN_VALUE)));
        }
        
        [Test]
        public virtual void TestOctetString()
        {
            AssertEquals("30050403010203", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithByteBufferOctetString(SigningServer.Android.IO.ByteBuffer.Wrap(new sbyte[]{
                1, 2, 3}
            ))));
            AssertEquals("30030401ff", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithByteBufferOctetString(SigningServer.Android.IO.ByteBuffer.Wrap(new sbyte[]{
                (sbyte)0xff}
            ))));
            AssertEquals("30020400", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithByteBufferOctetString(SigningServer.Android.IO.ByteBuffer.Wrap(new sbyte[0]))));
        }
        
        [Test]
        public virtual void TestBitString()
        {
            AssertEquals("30050303010203", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithByteBufferBitString(SigningServer.Android.IO.ByteBuffer.Wrap(new sbyte[]{
                1, 2, 3}
            ))));
            AssertEquals("30030301ff", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithByteBufferBitString(SigningServer.Android.IO.ByteBuffer.Wrap(new sbyte[]{
                (sbyte)0xff}
            ))));
            AssertEquals("30020300", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithByteBufferBitString(SigningServer.Android.IO.ByteBuffer.Wrap(new sbyte[0]))));
        }
        
        [Test]
        public virtual void TestOid()
        {
            AssertEquals("3003060100", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithOid("0.0")));
            AssertEquals("300b06092b0601040182371514", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithOid("1.3.6.1.4.1.311.21.20")));
            AssertEquals("300b06092a864886f70d010701", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithOid("1.2.840.113549.1.7.1")));
            AssertEquals("300b0609608648016503040201", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithOid("2.16.840.1.101.3.4.2.1")));
        }
        
        [Test]
        public virtual void TestChoice()
        {
            AssertEquals("0201ff", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Choice.Of(-1)));
            AssertEquals("80092b0601040182371514", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Choice.Of("1.3.6.1.4.1.311.21.20")));
        }
        
        [Test(Expected = typeof(Com.Android.Apksig.Internal.Asn1.Asn1EncodingException))]
        public virtual void TestChoiceWithNoFieldsSet()
        {
            SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Encode(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Choice(null, null));
        }
        
        [Test(Expected = typeof(Com.Android.Apksig.Internal.Asn1.Asn1EncodingException))]
        public virtual void TestChoiceWithMultipleFieldsSet()
        {
            SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Encode(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Choice(123, "1.3.6.1.4.1.311.21.20"));
        }
        
        [Test]
        public virtual void TestSetOf()
        {
            AssertEquals("3009310702010a020200ff", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SetOfIntegers.Of(0x0a, 0xff)));
            AssertEquals("3009310702010a020200ff", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SetOfIntegers.Of(0xff, 0x0a)));
            AssertEquals("300e310c02010a020200ff0203112233", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SetOfIntegers.Of(0xff, 0x0a, 0x112233)));
        }
        
        [Test]
        public virtual void TestSequence()
        {
            AssertEquals("30080201000601000400", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Sequence(SigningServer.Android.Math.BigInteger.ZERO, "0.0", new sbyte[0])));
            AssertEquals("30050201000400", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Sequence(SigningServer.Android.Math.BigInteger.ZERO, null, new sbyte[0])));
            try
            {
                AssertEquals("30050201000400", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Sequence(null, "0.0", new sbyte[0])));
                Fail();
            }
            catch (Com.Android.Apksig.Internal.Asn1.Asn1EncodingException expected)
            {
            }
        }
        
        [Test]
        public virtual void TestAsn1Class()
        {
            AssertEquals("30053003060100", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithAsn1Class(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithOid("0.0"))));
        }
        
        [Test]
        public virtual void TestOpaque()
        {
            AssertEquals("3003060100", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithOpaque(new Com.Android.Apksig.Internal.Asn1.Asn1OpaqueObject(new sbyte[]{
                0x06, 0x01, 0x00}
            ))));
        }
        
        [Test]
        public virtual void TestBoolean()
        {
            AssertEquals("3003010100", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithBoolean(false)));
            string value = SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithBoolean(true));
            AssertEquals("The encoding of a sequence with a boolean is not the expected length.", 10, value.Length());
            AssertEquals("The prefix of the encoding of a sequence with a boolean is not the expected " + "value.", "30030101", value.Substring(0, 8));
            AssertNotEquals("The encoding of true should be non-zero.", "00", value.Substring(8));
        }
        
        [Test]
        public virtual void TestUTCTime()
        {
            AssertEquals("300d170b313231323231313232315a", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithUTCTime("1212211221Z")));
            AssertEquals("300d170b393931323331323335395a", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithUTCTime("9912312359Z")));
        }
        
        [Test]
        public virtual void TestGeneralizedTime()
        {
            AssertEquals("301518133230313231323231313232302e3939392d3037", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithGeneralizedTime("201212211220.999-07")));
            AssertEquals("3017181532303338303131393033313430372e3030302b3030", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithGeneralizedTime("20380119031407.000+00")));
        }
        
        [Test]
        public virtual void TestUnencodedContainer()
        {
            AssertEquals("30233021310b30030201003004020200ff310830060204800000003108300602047fffffff", SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.EncodeToHex(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithSequenceOfUnencodedContainers(SigningServer.Android.Collections.Arrays.AsList(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.UnencodedContainerWithSetOfIntegers(SigningServer.Android.Collections.Arrays.AsList(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(0), new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(255))), new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.UnencodedContainerWithSetOfIntegers(SigningServer.Android.Collections.Arrays.AsList(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(SigningServer.Android.Core.IntExtensions.MIN_VALUE))), new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.UnencodedContainerWithSetOfIntegers(SigningServer.Android.Collections.Arrays.AsList(new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger(SigningServer.Android.Core.IntExtensions.MaxValue)))))));
        }
        
        internal static sbyte[] Encode(object obj)
        {
            return Com.Android.Apksig.Internal.Asn1.Asn1DerEncoder.Encode(obj);
        }
        
        internal static string EncodeToHex(object obj)
        {
            return SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Encode(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Encode(obj));
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
        public class SequenceWithInteger: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Index = 1, Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.INTEGER)]
            public int num;
            
            public SequenceWithInteger(int num)
            {
                this.num = num;
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
        public class SequenceWithOid: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Index = 1, Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.OBJECT_IDENTIFIER)]
            public string oid;
            
            public SequenceWithOid(string oid)
            {
                this.oid = oid;
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
        public class SequenceWithByteBufferOctetString: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Index = 1, Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.OCTET_STRING)]
            public SigningServer.Android.IO.ByteBuffer data;
            
            public SequenceWithByteBufferOctetString(SigningServer.Android.IO.ByteBuffer data)
            {
                this.data = data;
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
        public class SequenceWithByteBufferBitString: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Index = 1, Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.BIT_STRING)]
            public SigningServer.Android.IO.ByteBuffer data;
            
            public SequenceWithByteBufferBitString(SigningServer.Android.IO.ByteBuffer data)
            {
                this.data = data;
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.CHOICE)]
        public class Choice: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.INTEGER)]
            public int? num;
            
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.OBJECT_IDENTIFIER, Tagging = Com.Android.Apksig.Internal.Asn1.Asn1Tagging.IMPLICIT, TagNumber = 0)]
            public string oid;
            
            public Choice(int? num, string oid)
            {
                this.num = num;
                this.oid = oid;
            }
            
            public static SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Choice Of(int num)
            {
                return new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Choice(num, null);
            }
            
            public static SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Choice Of(string oid)
            {
                return new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.Choice(null, oid);
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
        public class SetOfIntegers: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SET_OF, ElementType = Com.Android.Apksig.Internal.Asn1.Asn1Type.INTEGER)]
            public SigningServer.Android.Collections.List<int?> values;
            
            public static SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SetOfIntegers Of(params int?[] values)
            {
                SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SetOfIntegers result = new SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SetOfIntegers();
                result.values = SigningServer.Android.Collections.Arrays.AsList(values);
                return result;
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
        public class Sequence: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.INTEGER, Index = 0)]
            public SigningServer.Android.Math.BigInteger num;
            
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.OBJECT_IDENTIFIER, Index = 1, Optional = true)]
            public string oid;
            
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.OCTET_STRING, Index = 2)]
            public sbyte[] octets;
            
            public Sequence(SigningServer.Android.Math.BigInteger num, string oid, sbyte[] octets)
            {
                this.num = num;
                this.oid = oid;
                this.octets = octets;
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
        public class SequenceWithAsn1Class: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
            public SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithOid seqWithOid;
            
            public SequenceWithAsn1Class(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithOid seqWithOid)
            {
                this.seqWithOid = seqWithOid;
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
        public class SequenceWithOpaque: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.ANY)]
            public Com.Android.Apksig.Internal.Asn1.Asn1OpaqueObject obj;
            
            public SequenceWithOpaque(Com.Android.Apksig.Internal.Asn1.Asn1OpaqueObject obj)
            {
                this.obj = obj;
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
        public class SequenceWithBoolean: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Index = 1, Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.BOOLEAN)]
            public bool value;
            
            public SequenceWithBoolean(bool value)
            {
                this.value = value;
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
        public class SequenceWithUTCTime: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Index = 1, Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.UTC_TIME)]
            public string utcTime;
            
            public SequenceWithUTCTime(string utcTime)
            {
                this.utcTime = utcTime;
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
        public class SequenceWithGeneralizedTime: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Index = 1, Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.GENERALIZED_TIME)]
            public string generalizedTime;
            
            public SequenceWithGeneralizedTime(string generalizedTime)
            {
                this.generalizedTime = generalizedTime;
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE)]
        public class SequenceWithSequenceOfUnencodedContainers: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Index = 1, Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE_OF)]
            public SigningServer.Android.Collections.List<SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.UnencodedContainerWithSetOfIntegers> containers;
            
            public SequenceWithSequenceOfUnencodedContainers(SigningServer.Android.Collections.List<SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.UnencodedContainerWithSetOfIntegers> containers)
            {
                this.containers = containers;
            }
            
        }
        
        [Com.Android.Apksig.Internal.Asn1.Asn1Class(Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.UNENCODED_CONTAINER)]
        public class UnencodedContainerWithSetOfIntegers: SigningServer.Android.TestBase
        {
            [Com.Android.Apksig.Internal.Asn1.Asn1Field(Index = 1, Type = Com.Android.Apksig.Internal.Asn1.Asn1Type.SET_OF)]
            public SigningServer.Android.Collections.List<SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger> values;
            
            public UnencodedContainerWithSetOfIntegers(SigningServer.Android.Collections.List<SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1DerEncoderTest.SequenceWithInteger> values)
            {
                this.values = values;
            }
            
        }
        
    }
    
}
