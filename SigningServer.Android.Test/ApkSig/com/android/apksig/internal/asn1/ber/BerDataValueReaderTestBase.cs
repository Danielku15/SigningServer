// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>

using System;

namespace SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber
{
    /// <summary>
    /// Base class for unit tests of ASN.1 BER (see {@code X.690}) data value reader implementations.
    /// 
    /// &lt;p&gt;Subclasses need to provide only an implementation of {@link #createReader(byte[])} and
    /// subclass-specific tests.
    /// </summary>
    public abstract class BerDataValueReaderTestBase
    {
        /// <summary>
        /// Returns a new reader initialized with the provided input.
        /// </summary>
        protected abstract Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueReader CreateReader(sbyte[] input);
        
        [Test]
        public virtual void TestEmptyInput()
        {
            AssertNull(ReadDataValue(""));
        }
        
        [Test]
        public virtual void TestEndOfInput()
        {
            Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueReader reader = CreateReader("3000");
            AssertNotNull(reader.ReadDataValue());
            AssertNull(reader.ReadDataValue());
            AssertNull(reader.ReadDataValue());
        }
        
        [Test]
        public virtual void TestSingleByteTagId()
        {
            Com.Android.Apksig.Internal.Asn1.Ber.BerDataValue dataValue = ReadDataValue("1000");
            AssertEquals(Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_UNIVERSAL, dataValue.GetTagClass());
            AssertFalse(dataValue.IsConstructed());
            AssertEquals(0x10, dataValue.GetTagNumber());
            dataValue = ReadDataValue("3900");
            AssertEquals(Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_UNIVERSAL, dataValue.GetTagClass());
            AssertTrue(dataValue.IsConstructed());
            AssertEquals(0x19, dataValue.GetTagNumber());
            dataValue = ReadDataValue("6700");
            AssertEquals(Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_APPLICATION, dataValue.GetTagClass());
            AssertTrue(dataValue.IsConstructed());
            AssertEquals(7, dataValue.GetTagNumber());
            dataValue = ReadDataValue("8600");
            AssertEquals(Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_CONTEXT_SPECIFIC, dataValue.GetTagClass());
            AssertFalse(dataValue.IsConstructed());
            AssertEquals(6, dataValue.GetTagNumber());
            dataValue = ReadDataValue("fe00");
            AssertEquals(Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_PRIVATE, dataValue.GetTagClass());
            AssertTrue(dataValue.IsConstructed());
            AssertEquals(0x1e, dataValue.GetTagNumber());
        }
        
        [Test]
        public virtual void TestHighTagNumber()
        {
            AssertEquals(7, ReadDataValue("3f0700").GetTagNumber());
            AssertEquals(7, ReadDataValue("3f800700").GetTagNumber());
            AssertEquals(7, ReadDataValue("3f80800700").GetTagNumber());
            AssertEquals(7, ReadDataValue("3f8080800700").GetTagNumber());
            AssertEquals(7, ReadDataValue("3f808080808080808080808080808080800700").GetTagNumber());
            AssertEquals(375, ReadDataValue("3f827700").GetTagNumber());
            AssertEquals(268435455, ReadDataValue("3fffffff7f00").GetTagNumber());
            AssertEquals(SigningServer.Android.Core.IntExtensions.MaxValue, ReadDataValue("3f87ffffff7f00").GetTagNumber());
        }
        
        [Test(Expected = typeof(Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueFormatException))]
        public virtual void TestHighTagNumberTooLarge()
        {
            ReadDataValue("3f888080800000");
        }
        
        public virtual void TestTruncatedHighTagNumberLastOctetMissing()
        {
            ReadDataValue("9f80");
        }
        
        [Test(Expected = typeof(Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueFormatException))]
        public virtual void TestTruncatedBeforeFirstLengthOctet()
        {
            ReadDataValue("30");
        }
        
        [Test]
        public virtual void TestShortFormLength()
        {
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(new sbyte[0], ReadDataValue("3000").GetEncodedContents());
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("010203"), ReadDataValue("3003010203").GetEncodedContents());
        }
        
        [Test]
        public virtual void TestLongFormLength()
        {
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(new sbyte[0], ReadDataValue("308100").GetEncodedContents());
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("010203"), ReadDataValue("30820003010203").GetEncodedContents());
            AssertEquals(255, ReadDataValue(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueReaderTestBase.Concat(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("3081ff"), new sbyte[255])).GetEncodedContents().Remaining());
            AssertEquals(0x110, ReadDataValue(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueReaderTestBase.Concat(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("30820110"), new sbyte[0x110])).GetEncodedContents().Remaining());
        }
        
        [Test(Expected = typeof(Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueFormatException))]
        public virtual void TestTruncatedLongFormLengthBeforeFirstLengthByte()
        {
            ReadDataValue("3081");
        }
        
        [Test(Expected = typeof(Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueFormatException))]
        public virtual void TestTruncatedLongFormLengthLastLengthByteMissing()
        {
            ReadDataValue("308200");
        }
        
        [Test(Expected = typeof(Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueFormatException))]
        public virtual void TestLongFormLengthTooLarge()
        {
            ReadDataValue("3084ffffffff");
        }
        
        [Test]
        public virtual void TestIndefiniteFormLength()
        {
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(new sbyte[0], ReadDataValue("30800000").GetEncodedContents());
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("020103"), ReadDataValue("30800201030000").GetEncodedContents());
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f"), ReadDataValue("0280" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "000102030405060708090a0b0c0d0e0f" + "0000").GetEncodedContents());
        }
        
        [Test(Expected = typeof(Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueFormatException))]
        public virtual void TestDefiniteLengthContentsTruncatedBeforeFirstContentOctet()
        {
            ReadDataValue("3001");
        }
        
        [Test(Expected = typeof(Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueFormatException))]
        public virtual void TestIndefiniteLengthContentsTruncatedBeforeFirstContentOctet()
        {
            ReadDataValue("3080");
        }
        
        [Test(Expected = typeof(Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueFormatException))]
        public virtual void TestTruncatedDefiniteLengthContents()
        {
            ReadDataValue("30030102");
        }
        
        [Test(Expected = typeof(Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueFormatException))]
        public virtual void TestTruncatedIndefiniteLengthContents()
        {
            ReadDataValue("308001020300");
        }
        
        [Test]
        public virtual void TestEmptyDefiniteLengthContents()
        {
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(new sbyte[0], ReadDataValue("3000").GetEncodedContents());
        }
        
        [Test]
        public virtual void TestEmptyIndefiniteLengthContents()
        {
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(new sbyte[0], ReadDataValue("30800000").GetEncodedContents());
        }
        
        [Test]
        public virtual void TestPrimitiveIndefiniteLengthContentsMustNotBeParsed()
        {
            AssertEquals("0203", SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Encode(ReadDataValue("028002030000010000").GetEncodedContents()));
        }
        
        [Test]
        public virtual void TestConstructedIndefiniteLengthContentsContainingIndefiniteLengthEncodedValues()
        {
            AssertEquals("3080028001000000000280020000", SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Encode(ReadDataValue("30803080028001000000000280020000000002010c").GetEncodedContents()));
        }
        
        [Test(Expected = typeof(Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueFormatException))]
        public virtual void TestConstructedIndefiniteLengthContentsContainingGarbage()
        {
            ReadDataValue("3080020a030000");
        }
        
        [Test]
        public virtual void TestReadAdvancesPosition()
        {
            Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueReader reader = CreateReader("37018f050001020304");
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("37018f"), reader.ReadDataValue().GetEncoded());
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("0500"), reader.ReadDataValue().GetEncoded());
            SigningServer.Android.Com.Android.Apksig.Internal.Test.MoreAsserts.AssertByteBufferEquals(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode("01020304"), reader.ReadDataValue().GetEncoded());
            AssertNull(reader.ReadDataValue());
        }
        
        internal Com.Android.Apksig.Internal.Asn1.Ber.BerDataValueReader CreateReader(string hexEncodedInput)
        {
            return CreateReader(SigningServer.Android.Com.Android.Apksig.Internal.Util.HexEncoding.Decode(hexEncodedInput));
        }
        
        internal Com.Android.Apksig.Internal.Asn1.Ber.BerDataValue ReadDataValue(sbyte[] input)
        {
            return CreateReader(input).ReadDataValue();
        }
        
        internal Com.Android.Apksig.Internal.Asn1.Ber.BerDataValue ReadDataValue(string hexEncodedInput)
        {
            return CreateReader(hexEncodedInput).ReadDataValue();
        }
        
        internal static sbyte[] Concat(sbyte[] arr1, sbyte[] arr2)
        {
            sbyte[] result = new sbyte[arr1.Length + arr2.Length];
            SigningServer.Android.Core.System.Arraycopy(arr1, 0, result, 0, arr1.Length);
            SigningServer.Android.Core.System.Arraycopy(arr2, 0, result, arr1.Length, arr2.Length);
            return result;
        }
        
    }
    
}
