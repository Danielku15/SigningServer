// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>

using System;

namespace SigningServer.Android.Com.Android.Apksig.Internal.Apk
{
    /// <summary>
    /// Base implementation of an APK signer.
    /// </summary>
    public class ApkSignerInfo
    {
        public int index;
        
        public SigningServer.Android.Collections.List<SigningServer.Android.Security.Cert.X509Certificate> certs = new SigningServer.Android.Collections.List<SigningServer.Android.Security.Cert.X509Certificate>();
        
        public SigningServer.Android.Collections.List<SigningServer.Android.Security.Cert.X509Certificate> certificateLineage = new SigningServer.Android.Collections.List<SigningServer.Android.Security.Cert.X509Certificate>();
        
        internal readonly SigningServer.Android.Collections.List<SigningServer.Android.Com.Android.Apksig.ApkVerificationIssue> mWarnings = new SigningServer.Android.Collections.List<SigningServer.Android.Com.Android.Apksig.ApkVerificationIssue>();
        
        internal readonly SigningServer.Android.Collections.List<SigningServer.Android.Com.Android.Apksig.ApkVerificationIssue> mErrors = new SigningServer.Android.Collections.List<SigningServer.Android.Com.Android.Apksig.ApkVerificationIssue>();
        
        /// <summary>
        /// Adds a new {@link ApkVerificationIssue} as an error to this signer using the provided {@code
        /// issueId} and {@code params}.
        /// </summary>
        public virtual void AddError(int issueId, params object[] parameters)
        {
            mErrors.Add(new SigningServer.Android.Com.Android.Apksig.ApkVerificationIssue(issueId, parameters));
        }
        
        /// <summary>
        /// Adds a new {@link ApkVerificationIssue} as a warning to this signer using the provided {@code
        /// issueId} and {@code params}.
        /// </summary>
        public virtual void AddWarning(int issueId, params object[] parameters)
        {
            mWarnings.Add(new SigningServer.Android.Com.Android.Apksig.ApkVerificationIssue(issueId, parameters));
        }
        
        /// <summary>
        /// Returns {@code true} if any errors were encountered during verification for this signer.
        /// </summary>
        public virtual bool ContainsErrors()
        {
            return !mErrors.IsEmpty();
        }
        
        /// <summary>
        /// Returns {@code true} if any warnings were encountered during verification for this signer.
        /// </summary>
        public virtual bool ContainsWarnings()
        {
            return !mWarnings.IsEmpty();
        }
        
        /// <summary>
        /// Returns the errors encountered during verification for this signer.
        /// </summary>
        public virtual SigningServer.Android.Collections.List<SigningServer.Android.Com.Android.Apksig.ApkVerificationIssue> GetErrors()
        {
            return mErrors;
        }
        
        /// <summary>
        /// Returns the warnings encountered during verification for this signer.
        /// </summary>
        public virtual SigningServer.Android.Collections.List<SigningServer.Android.Com.Android.Apksig.ApkVerificationIssue> GetWarnings()
        {
            return mWarnings;
        }
        
    }
    
}
