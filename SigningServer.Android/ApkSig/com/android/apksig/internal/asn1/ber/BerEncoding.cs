// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>

using System;

namespace SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber
{
    /// <summary>
    /// ASN.1 Basic Encoding Rules (BER) constants and helper methods. See {@code X.690}.
    /// </summary>
    public abstract class BerEncoding
    {
        internal BerEncoding()
        {
        }
        
        /// <summary>
        /// Constructed vs primitive flag in the first identifier byte.
        /// </summary>
        public static readonly int ID_FLAG_CONSTRUCTED_ENCODING = 1 << 5;
        
        /// <summary>
        /// Tag class: UNIVERSAL
        /// </summary>
        public const int TAG_CLASS_UNIVERSAL = 0;
        
        /// <summary>
        /// Tag class: APPLICATION
        /// </summary>
        public const int TAG_CLASS_APPLICATION = 1;
        
        /// <summary>
        /// Tag class: CONTEXT SPECIFIC
        /// </summary>
        public const int TAG_CLASS_CONTEXT_SPECIFIC = 2;
        
        /// <summary>
        /// Tag class: PRIVATE
        /// </summary>
        public const int TAG_CLASS_PRIVATE = 3;
        
        /// <summary>
        /// Tag number: BOOLEAN
        /// </summary>
        public const int TAG_NUMBER_BOOLEAN = 0x1;
        
        /// <summary>
        /// Tag number: INTEGER
        /// </summary>
        public const int TAG_NUMBER_INTEGER = 0x2;
        
        /// <summary>
        /// Tag number: BIT STRING
        /// </summary>
        public const int TAG_NUMBER_BIT_STRING = 0x3;
        
        /// <summary>
        /// Tag number: OCTET STRING
        /// </summary>
        public const int TAG_NUMBER_OCTET_STRING = 0x4;
        
        /// <summary>
        /// Tag number: NULL
        /// </summary>
        public const int TAG_NUMBER_NULL = 0x05;
        
        /// <summary>
        /// Tag number: OBJECT IDENTIFIER
        /// </summary>
        public const int TAG_NUMBER_OBJECT_IDENTIFIER = 0x6;
        
        /// <summary>
        /// Tag number: SEQUENCE
        /// </summary>
        public const int TAG_NUMBER_SEQUENCE = 0x10;
        
        /// <summary>
        /// Tag number: SET
        /// </summary>
        public const int TAG_NUMBER_SET = 0x11;
        
        /// <summary>
        /// Tag number: UTC_TIME
        /// </summary>
        public const int TAG_NUMBER_UTC_TIME = 0x17;
        
        /// <summary>
        /// Tag number: GENERALIZED_TIME
        /// </summary>
        public const int TAG_NUMBER_GENERALIZED_TIME = 0x18;
        
        public static int GetTagNumber(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1Type? dataType)
        {
            switch (dataType)
            {
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1Type.INTEGER:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_INTEGER;
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1Type.OBJECT_IDENTIFIER:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_OBJECT_IDENTIFIER;
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1Type.OCTET_STRING:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_OCTET_STRING;
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1Type.BIT_STRING:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_BIT_STRING;
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1Type.SET_OF:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_SET;
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE:
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1Type.SEQUENCE_OF:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_SEQUENCE;
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1Type.UTC_TIME:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_UTC_TIME;
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1Type.GENERALIZED_TIME:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_GENERALIZED_TIME;
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1Type.BOOLEAN:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_BOOLEAN;
                default:
                    throw new System.ArgumentException("Unsupported data type: " + dataType);
            }
        }
        
        public static int GetTagClass(SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1TagClass tagClass)
        {
            switch (tagClass)
            {
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1TagClass.APPLICATION:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_APPLICATION;
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1TagClass.CONTEXT_SPECIFIC:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_CONTEXT_SPECIFIC;
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1TagClass.PRIVATE:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_PRIVATE;
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Asn1TagClass.UNIVERSAL:
                    return SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_UNIVERSAL;
                default:
                    throw new System.ArgumentException("Unsupported tag class: " + tagClass);
            }
        }
        
        public static string TagClassToString(int typeClass)
        {
            switch (typeClass)
            {
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_APPLICATION:
                    return "APPLICATION";
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_CONTEXT_SPECIFIC:
                    return "";
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_PRIVATE:
                    return "PRIVATE";
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_CLASS_UNIVERSAL:
                    return "UNIVERSAL";
                default:
                    throw new System.ArgumentException("Unsupported type class: " + typeClass);
            }
        }
        
        public static string TagClassAndNumberToString(int tagClass, int tagNumber)
        {
            string classString = SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TagClassToString(tagClass);
            string numberString = SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TagNumberToString(tagNumber);
            return classString.IsEmpty() ? numberString : classString + " " + numberString;
        }
        
        public static string TagNumberToString(int tagNumber)
        {
            switch (tagNumber)
            {
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_INTEGER:
                    return "INTEGER";
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_OCTET_STRING:
                    return "OCTET STRING";
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_BIT_STRING:
                    return "BIT STRING";
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_NULL:
                    return "NULL";
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_OBJECT_IDENTIFIER:
                    return "OBJECT IDENTIFIER";
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_SEQUENCE:
                    return "SEQUENCE";
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_SET:
                    return "SET";
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_BOOLEAN:
                    return "BOOLEAN";
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_GENERALIZED_TIME:
                    return "GENERALIZED TIME";
                case SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.TAG_NUMBER_UTC_TIME:
                    return "UTC TIME";
                default:
                    return "0x" + SigningServer.Android.Core.IntExtensions.ToHexString(tagNumber);
            }
        }
        
        /// <summary>
        /// Returns {@code true} if the provided first identifier byte indicates that the data value uses
        /// constructed encoding for its contents, or {@code false} if the data value uses primitive
        /// encoding for its contents.
        /// </summary>
        public static bool IsConstructed(byte firstIdentifierByte)
        {
            return (firstIdentifierByte & SigningServer.Android.Com.Android.Apksig.Internal.Asn1.Ber.BerEncoding.ID_FLAG_CONSTRUCTED_ENCODING) != 0;
        }
        
        /// <summary>
        /// Returns the tag class encoded in the provided first identifier byte. See {@code TAG_CLASS}
        /// constants.
        /// </summary>
        public static int GetTagClass(byte firstIdentifierByte)
        {
            return (firstIdentifierByte & 0xff) >> 6;
        }
        
        public static byte SetTagClass(byte firstIdentifierByte, int tagClass)
        {
            return (byte)((firstIdentifierByte & 0x3f) | (tagClass << 6));
        }
        
        /// <summary>
        /// Returns the tag number encoded in the provided first identifier byte. See {@code TAG_NUMBER}
        /// constants.
        /// </summary>
        public static int GetTagNumber(byte firstIdentifierByte)
        {
            return firstIdentifierByte & 0x1f;
        }
        
        public static byte SetTagNumber(byte firstIdentifierByte, int tagNumber)
        {
            return (byte)((firstIdentifierByte & ~0x1f) | tagNumber);
        }
        
    }
    
}
