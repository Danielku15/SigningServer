// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>

using System;

namespace SigningServer.Android.Com.Android.Apksig.Internal.Util
{
    /// <summary>
    /// Data sink which stores all received data into the associated {@link ByteBuffer}.
    /// </summary>
    public class ByteBufferSink: SigningServer.Android.Com.Android.Apksig.Util.DataSink
    {
        internal readonly SigningServer.Android.IO.ByteBuffer mBuffer;
        
        public ByteBufferSink(SigningServer.Android.IO.ByteBuffer buffer)
        {
            mBuffer = buffer;
        }
        
        public virtual SigningServer.Android.IO.ByteBuffer GetBuffer()
        {
            return mBuffer;
        }
        
        public void Consume(sbyte[] buf, int offset, int length)
        {
            try
            {
                mBuffer.Put(buf, offset, length);
            }
            catch (SigningServer.Android.IO.BufferOverflowException e)
            {
                throw new SigningServer.Android.IO.IOException("Insufficient space in output buffer for " + length + " bytes", e);
            }
        }
        
        public void Consume(SigningServer.Android.IO.ByteBuffer buf)
        {
            int length = buf.Remaining();
            try
            {
                mBuffer.Put(buf);
            }
            catch (SigningServer.Android.IO.BufferOverflowException e)
            {
                throw new SigningServer.Android.IO.IOException("Insufficient space in output buffer for " + length + " bytes", e);
            }
        }
        
    }
    
}
