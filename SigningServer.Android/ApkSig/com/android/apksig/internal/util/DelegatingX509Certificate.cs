// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>

using System;
using SigningServer.Android.Security.Cert;

namespace SigningServer.Android.Com.Android.Apksig.Internal.Util
{
    /// <summary>
    /// {@link X509Certificate} which delegates all method invocations to the provided delegate
    /// {@code X509Certificate}.
    /// </summary>
    public class DelegatingX509Certificate: SigningServer.Android.Security.Cert.X509Certificate
    {
        internal static readonly long serialVersionUID = 1L;
        
        internal readonly SigningServer.Android.Security.Cert.X509Certificate mDelegate;
        
        public DelegatingX509Certificate(SigningServer.Android.Security.Cert.X509Certificate @delegate)
        {
            this.mDelegate = @delegate;
        }
        
        public bool HasUnsupportedCriticalExtension()
        {
            return mDelegate.HasUnsupportedCriticalExtension();
        }
        
        public SigningServer.Android.Math.BigInteger GetSerialNumber()
        {
            return mDelegate.GetSerialNumber();
        }
        
        public SigningServer.Android.Security.Principal GetIssuerDN()
        {
            return mDelegate.GetIssuerDN();
        }
        
        public SigningServer.Android.Security.Principal GetSubjectDN()
        {
            return mDelegate.GetSubjectDN();
        }
        
        public bool[] GetKeyUsage()
        {
            return mDelegate.GetKeyUsage();
        }
        
        public sbyte[] GetEncoded()
        {
            return mDelegate.GetEncoded();
        }
        
        public string ToString()
        {
            return mDelegate.ToString();
        }
        
        public SigningServer.Android.Security.PublicKey GetPublicKey()
        {
            return mDelegate.GetPublicKey();
        }
        
        public X500Principal GetIssuerX500Principal()
        {
            return mDelegate.GetIssuerX500Principal();
        }
        
        public bool Equals(X509Certificate other)
        {
            return mDelegate.Equals(other);
        }
    }
}
