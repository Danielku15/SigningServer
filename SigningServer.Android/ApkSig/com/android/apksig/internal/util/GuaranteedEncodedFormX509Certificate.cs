// <auto-generated>
// This code was auto-generated.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>

using System;

namespace SigningServer.Android.Com.Android.Apksig.Internal.Util
{
    /// <summary>
    /// {@link X509Certificate} whose {@link #getEncoded()} returns the data provided at construction
    /// time.
    /// </summary>
    public class GuaranteedEncodedFormX509Certificate: SigningServer.Android.Com.Android.Apksig.Internal.Util.DelegatingX509Certificate
    {
        internal static readonly long serialVersionUID = 1L;
        
        internal readonly sbyte[] mEncodedForm;
        
        internal int mHash = -1;
        
        public GuaranteedEncodedFormX509Certificate(SigningServer.Android.Security.Cert.X509Certificate wrapped, sbyte[] encodedForm)
            : base (wrapped)
        {
            ;
            this.mEncodedForm = (sbyte[])((encodedForm != null) ? encodedForm.Clone() : null);
        }
        
        public sbyte[] GetEncoded()
        {
            return (sbyte[])((mEncodedForm != null) ? mEncodedForm.Clone() : null);
        }
        
        public override bool Equals(object o)
        {
            if (this == o)
                return true;
            if (!(o is SigningServer.Android.Security.Cert.X509Certificate))
                return false;
            try
            {
                sbyte[] a = this.GetEncoded();
                sbyte[] b = ((SigningServer.Android.Security.Cert.X509Certificate)o).GetEncoded();
                return SigningServer.Android.Collections.Arrays.Equals(a, b);
            }
            catch (SigningServer.Android.Security.Cert.CertificateEncodingException e)
            {
                return false;
            }
        }
        
        public override int GetHashCode()
        {
            if (mHash == -1)
            {
                try
                {
                    mHash = SigningServer.Android.Collections.Arrays.GetHashCode(this.GetEncoded());
                }
                catch (SigningServer.Android.Security.Cert.CertificateEncodingException e)
                {
                    mHash = 0;
                }
            }
            return mHash;
        }
        
    }
    
}
